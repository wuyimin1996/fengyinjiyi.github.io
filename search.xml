<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[目前流行的前后端框架技术列举]]></title>
    <url>%2F2018%2F11%2F22%2F%E7%9B%AE%E5%89%8D%E6%B5%81%E8%A1%8C%E7%9A%84%E5%89%8D%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6%E6%8A%80%E6%9C%AF%E5%88%97%E4%B8%BE%2F</url>
    <content type="text"><![CDATA[&#8195;&#8195;这是本博客的第一篇文章，不知道是该写点什么东西才好，正好自己平时比较喜欢浏览一些公总号上的技术文章，这两天看到几篇对目前比较前沿的、使用人数较多的(流行的)前后端技术，这里我整合记录一下，算是给自己往后的学习列一个大纲。 后端&#8195;&#8195;Java目前是业内使用的编程语言中占据最高的地位，毕业生初入社会要是从事后端工作的话，大多都会投递从事Java开发的简历，所以Java这门编程语言，应该是很多后端程序员必备的基础技能，甚至可以说是“吃饭的家伙”。&#8195;&#8195;即使目前博主本人从事前端开发工作，但也会学习后端基础，多了解了解总有好处。这里列举一下对博主而言目前比较重要的一些Java Web框架，并且都上网查了每个框架的官网和github上的源码，可能没有太大的必要，但是还是记录一下吧。 Spring&#8195;&#8195;Spring这个词我相信只要是程序员，就算不知道是干吗的，但至少也听说过。Spring是一个开放源代码的设计层面框架，他解决的是业务逻辑层和其他各层的松耦合问题，因此它将面向接口的编程思想贯穿整个系统应用(太官方化的语言，摘自百度百科)。&#8195;&#8195;说点大家都听得懂得吧，Spring是Java后端框架里最强大的，从字面上理解是“春天”的意思，那就是我们程序员的春天，自然是最牛的。Spring的优点我也不说了，大多情况下我也只是会用，不太理解框架的底层原理，这个的确是需要进步滴，不过我知道Spring有 IOC 和 AOP 两大利器，大大简化了软件开发复杂性。总而言之，Spring就是很好，让Java开发更加简单。官网：https://spring.io/projects/spring-framework 源码：https://github.com/spring-projects/spring-framework Spring MVC&#8195;&#8195;Spring MVC就是一个MVC框架，它类似于Struts的一个MVC开框架，其实都是属于Spring，Spring MVC需要有Spring的架包作为支撑才能跑起来，是Spring项目的重要成员，主要也是也是让Java开发变得更加简答。官网：https://spring.io/projects/spring-framework 源码：https://github.com/spring-projects/spring-framework Spring Boot&#8195;&#8195;Spring Boot 是 Spring 开源组织下的一个子项目，个人感觉它最大的优点就是简化了需要配置文件，把Spring有关的各种xml配置文件都压缩成一个，让Spring开始使用起来更加简答。再有一个特点就是，这个东东居然自己集成了Tomcat，也就是它内置Tomcat启动。官网：https://spring.io/projects/spring-boot 源码：https://github.com/spring-projects/spring-boot Spring Cloud&#8195;&#8195;Spring Cloud 是一系列框架的有序集合，是目前最火热的微服务框架首选，它利用Spring Boot 的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用 Spring Boot 的开发风格做到一键启动和部署(摘自百度百科主要博主也没用这个框架，不是很了解，后续可以一起学习交流)。官网：http://projects.spring.io/spring-cloud/ 源码：https://github.com/spring-cloud Mybatis/ iBatis&#8195;&#8195;Mybatis是一款持久层(简单理解持久层就是，直接操作数据库那一层)框架，它支持定制化 SQL、存储过程以及高级映射。这个框架就是让我们在进行Java开发时，在对数据进行增删改查时显得更加优雅、高效。官网：http://www.mybatis.org/mybatis-3/ 源码：https://github.com/mybatis Dubbo&#8195;&#8195;很早就知道分布式服务这个概念，一直也很想学习了解一下。Dubbo 是一个分布式、高性能、透明化的 RPC 服务框架，提供服务自动注册、自动发现等高效服务治理方案。RPC 指的是远程调用协议，也就是说两个服务器交互数据。它能干吗？简单来说，用户发送的请求转交给 Nginx，然后 Nginx 决定将请求发送那个服务器（此处为 Tomcat），然后 Tomcat 将请求发送给 Dubbo，由它来决定继续调用哪个 service 层去数据库读取数据(摘自简书博客文章)。官网：http://www.mybatis.org/mybatis-3/ 源码：https://github.com/mybatis Netty&#8195;&#8195;Netty 是由 JBOSS 提供的一个开源的、异步的、基于事件驱动的网络通信框架，用 Netty 可以快速开发高性能、高可靠性的网络服务器和客户端程序，Netty 简化了网络应用的编程开发过程，使开发网络编程变得异常简单。官网：https://netty.io/ 源码：https://github.com/netty/netty Shiro&#8195;&#8195;Apache Shiro是一个强大而灵活的开源安全框架，它干净利落地处理身份认证，授权，企业会话管理和加密。官网：http://shiro.apache.org/ 源码：https://github.com/apache/shiro Ehcache&#8195;&#8195;EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是 Hibernate 中默认的CacheProvider。它使用的是 JVM 的堆内存，超过内存可以设置缓存到磁盘，企业版的可以使用 JVM 堆外的物理内存。官网：http://www.ehcache.org/ 源码：https://github.com/ehcache/ehcache3 JUnit&#8195;&#8195;JUnit 是一个 Java 语言的单元测试框架，绝大多数 Java 的开发环境都已经集成了 JUnit 作为其单元测试的工具。官网：https://junit.org 源码：https://github.com/junit-team/ Log4j&#8195;&#8195;Log4j 是 Apache 的一个开源日志框架，通过 Log4j 我们可以将程序中的日志信息输出到控制台、文件等来记录日志。作为一个最老牌的日志框架，它现在的主流版本是 Log4j2。Log4j2是重新架构的一款日志框架，抛弃了之前 Log4j 的不足，以及吸取了优秀日志框架 Logback 的设计。官网：https://logging.apache.org/log4j/2.x/ 源码：https://logging.apache.org/log4j/2.x/source-repository.html 前端&#8195;&#8195;前端，是近几年火起来的岗位，听说在以前，并没有“前端”这个岗位称呼，不过好像有叫网页制作的岗位，应该就是现在前端的前身了，工作上只是画画网页页面，实现一些不是很复杂的页面交互功能，在大家看来并不一个值得考虑的岗位。现在不一样了，前端近几年的技术站更新的特别快，尤其是NodeJS那更是让我喜欢得不得了。下面同样也列出一些前端上的技术框架。 NodeJs&#8195;&#8195;Node.js是一个Javascript运行环境，是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。简单的说 Node.js 就是运行在服务端的 JavaScript。以上从百度百科和菜鸟教程借鉴过来混合描述了一下Node.js。&#8195;&#8195;用自己的话简单描述一下 Node.js 吧。首先我们要确定一个正确的概念，Node.js不是JavaScript框架，应该算一个开发平台，这样说吧，安装了Node.js，就可以通过命令行下载目前网络上各种组件依赖，从而搭建起来前端项目。官网：https://nodejs.org/en/ 源码：https://github.com/nodejs/node/tree/master/lib/internal Vue&#8195;&#8195;Vue是目前国内比较火的前段框架，是一套构建用户界面的渐进式框架。Vue是我毕业实习所学习的第一个前端框架，上手不难，看着官方文档学习能很快掌握用法。先说说Vue最大的优点就是，相比传统的用Js或者jQuery去操作Dom来进行页面数据的渲染，Vue能直接将数据和Html元素进行连接，实时更新，减少了前端的工作量，光说不如直接去实践。官网：https://cn.vuejs.org/ 源码：https://github.com/vuejs/vue React&#8195;&#8195;StateOfJS 表示，React 拥有JavaScript框架里最大的市场份额，大概占比64.8%。只不过这个框架我没用过，既然这么多人在用，应该也是一个很值得去学习的。官网：https://reactjs.org/ 源码：https://github.com/facebook/react/ Redux&#8195;&#8195;Redux 是使用最广泛的工具，82％ 的满意率也证明了它的成熟程度。这是JavaScript的数据层工具，之前也没有用过，先记录一下，后续有机会可以学习。官网：https://www.redux.org.cn/ 源码：https://github.com/reduxjs/redux Express&#8195;&#8195;在搭建此博客之前，我并不知道有Hexo这样一个能够快速构建个人博客的前段框架，打算想自己写一个，再一次偶然的机会，我在一些技术贴上看到了一个JavaScript的后盾框架Express，能够用JS语言搭建基于Node.js的后端，这让我眼前一亮，既然目前是前段开发，就心想直接用JS去做一整套包括前后端的个人博客网站吧，而且能根据我自己的需求去设计自己想要的功能。&#8195;&#8195;说做就做了，我一边学习一边实践，陆陆续续经过两三个月实现了一个简单的个人博客。不多说了，后续有时间我将搭建过程写出来分享给大家。官网：http://www.expressjs.com.cn/ 源码：https://github.com/expressjs/express Mocha&#8195;&#8195;调查显示，Mocha 仍然是最常用的单元测试框架。它已经存在了很长一段时间，拥有最大的生态系统。 Electron&#8195;&#8195;Electron是使用 JavaScript, HTML 和 CSS 构建跨平台的桌面应用官网：https://electronjs.org/ 源码：https://github.com/electron 其他的&#8195;&#8195;以上就是博主搜集的技术框架栈，目前技术更新太快，可能有点不符合现状，仅供参考。&#8195;&#8195;除了编程语言、框架技术，我们还需要了解一下其他的开发有关的东西，如编译器、服务器、版本管理工具等等。。。&#8195;&#8195;编译器博主推荐使用 IntelliJ IDEA ，用过的同学当然最好，没有用过的同学建议早点接触使用，目前对于Java开发来说，这是最好用的编译器了。前端的同学博主推荐使用 Visual Studio Code，这也是博主才开始使用的前段编辑器，之前也听过，一直觉得应该和Sublime差不多，但是一次偶然的机会下载使用了一次，发现其他的编辑器真的不适合我了。&#8195;&#8195;服务器的话，博主建议有条件的同学可以考虑阿里云，比较现在阿里云有一个云翼计划，24岁以下用户自动默认为学生用户，可以购买一年138人民币的服务器，相当实惠(声明，没有给阿里云打广告，只是因为真的喜欢阿里云产品)。服务器系统直接Linux吧，因为WinService和我们所使用的Windows没什么操作上的区别。&#8195;&#8195;版本管理就Git喽，这些网上教程都很多，SVN也可以试着了解一下，可能有些公司内部会有用到。 &#8195;&#8195;好啦，终于写完了第一篇文章，打小就不喜欢写作文，文采不好，望读者们多见谅！有需要或者有补充的可以留下评论，或者发邮件。&#8195;&#8195;最后，希望能和大家一起进步，IT这一行真的是学无止境！]]></content>
  </entry>
</search>
